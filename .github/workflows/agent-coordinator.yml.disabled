name: CoordinatorAgent - Task Analysis

on:
  issues:
    types: [labeled, opened]
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to analyze'
        required: true
        type: number

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  coordinate:
    name: Analyze and Coordinate Task
    runs-on: ubuntu-latest

    # Only run if issue has coordinator label or manual trigger
    if: |
      (github.event_name == 'issues' && contains(join(github.event.issue.labels.*.name, ','), 'agent:coordinator')) ||
      github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run CoordinatorAgent
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          ISSUE_NUM=${{ github.event.issue.number || inputs.issue_number }}
          echo "🔍 Analyzing Issue #${ISSUE_NUM} with CoordinatorAgent"
          npm run coordinator:analyze -- --issue ${ISSUE_NUM}

      - name: Post analysis result
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const issueNum = ${{ github.event.issue.number || inputs.issue_number }};
            const analysisPath = `.ai/coordinator-analysis-${issueNum}.json`;

            if (fs.existsSync(analysisPath)) {
              const analysis = JSON.parse(fs.readFileSync(analysisPath, 'utf-8'));

              let body = `## 🎯 CoordinatorAgent Analysis Complete\n\n`;
              body += `**Total Tasks**: ${analysis.totalTasks}\n`;
              body += `**Total Waves**: ${analysis.totalWaves}\n`;
              body += `**Efficiency Gain**: ${Math.round(analysis.efficiencyGain * 100)}%\n\n`;
              body += `**Critical Path**: ${analysis.criticalPath.join(' → ')}\n\n`;
              body += `### Wave Breakdown\n\n`;

              analysis.waves.forEach(wave => {
                body += `**Wave ${wave.waveNumber}** (${wave.tasks.length} tasks):\n`;
                wave.tasks.forEach(task => {
                  body += `- #${task.issueNumber}: ${task.title}\n`;
                });
                body += `\n`;
              });

              body += `---\n🤖 Generated by CoordinatorAgent`;

              github.rest.issues.createComment({
                issue_number: issueNum,
                owner: context.repo.owner,
                repo: context.repo.name,
                body: body
              });
            }

      - name: Upload analysis artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coordinator-analysis-${{ github.event.issue.number || inputs.issue_number }}
          path: .ai/coordinator-analysis-*.json
          retention-days: 30
